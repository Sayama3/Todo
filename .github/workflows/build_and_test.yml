name: Build and Test Todo

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        compiler: [llvm, gcc]
        include:
          - os: windows-latest
            compiler: msvc
      fail-fast: false
  
    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    # - name: Setup Cpp
    #   uses: aminya/setup-cpp@v1
    #   with:
    #     compiler: ${{ matrix.compiler }}
    #     vcvarsall: ${{ contains(matrix.os, 'windows') }}
    #     cmake: true
    #     ninja: true
    #     vcpkg: false
    #     cppcheck: false
    #     clangtidy: false # instead of `true`, which chooses the default version, you can pass a specific version.

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
